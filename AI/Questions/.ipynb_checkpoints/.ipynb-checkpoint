{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![a single neuron](https://cdn-images-1.medium.com/max/1000/1*L9xLcwKhuZ2cuS8fF0ZjwA.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Topics Covered:\n",
    "\n",
    "[Input Layer][machine learning mastery] - Input Variables  \n",
    "[Hidden Layer][machine learning mastery] - Layer of nodes between the input and output layers  \n",
    "[Output Layer][machine learning mastery] - Output  \n",
    "\n",
    "[Gradient Descent](https://www.youtube.com/watch?v=sDv4f4s2SB8) - Negative of the gradient to approach the [local minimum](https://en.wikipedia.org/wiki/Maxima_and_minima).  \n",
    "* [Linear Regression ](https://newonlinecourses.science.psu.edu/stat501/node/251/) - The relationship between a scalar response and one or more independent varibles  \n",
    "* [Least Squares](https://youtu.be/5SKDN0Iz93s)    \n",
    "\n",
    "[Y_hat](https://www.statisticshowto.datasciencecentral.com/y-hat-definition/) - The predicted value of y. \n",
    "\n",
    "[machine learning mastery]: (https://machinelearningmastery.com/how-to-configure-the-number-of-layers-and-nodes-in-a-neural-network/)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Articles:\n",
    "\n",
    "https://towardsdatascience.com/power-of-a-single-neuron-perceptron-c418ba445095"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
